package com.ccc.webapp.controller;

import java.io.IOException;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ccc.jsonview.AjaxResponseBody;
import com.ccc.model.TaxObject;
import com.ccc.service.SaleTaxService;
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;


@Controller
public class TaxCalculatorController {
	
	@Autowired
	SaleTaxService saleTaxService;
	
	ObjectMapper mapper = new ObjectMapper();
	
	@RequestMapping(value= "/taxCalculator", method=RequestMethod.POST,consumes=MediaType.ALL_VALUE,produces=MediaType.APPLICATION_JSON_UTF8_VALUE )
	public @ResponseBody AjaxResponseBody<String, Object> getTaxInformation(@RequestBody String json) throws JsonParseException, JsonMappingException, IOException{
		System.out.println("fetching json value...");
		ObjectNode node = mapper.readValue(json, ObjectNode.class);
		/*String plus4=node.get("plus4").textValue();
		String zip=node.get("zip").textValue();
		String rName=node.get("state").textValue();
		String cName=node.get("county").textValue();
		String modelMake = node.get("vehicleMake").textValue();
		String modelName = node.get("vehicleModel").textValue();
		Integer modelYear = Integer.parseInt(node.get("vehicleYear").textValue()); 
		String modelTrim = node.get("vehicleTrim").textValue();
		String plateType = node.get("plateType").textValue();*/
		AjaxResponseBody<String, Object> res =  new AjaxResponseBody<>();
		//List<Map<String ,String>>  list=saleTaxService.getAllSaleTax(1.0,Integer.parseInt(plus4),Integer.parseInt(zip), rName, cName, modelMake, modelName,modelYear,modelTrim,plateType);
		String rName=node.get("state").textValue();
		if(rName.equals("WA")){
			List<Map<String ,String>>  list=saleTaxService.getTaxes(node);
			res.setObj(list);
		} else if(rName.equals("UT")){
			List<TaxObject> taxData =  saleTaxService.getCitySpecificGenericTaxData(node);
			res.setObj(taxData);
		}else{
			List<TaxObject> taxData =  saleTaxService.getGenericTaxData(node);
			res.setObj(taxData);
		}
		return res;
	}

}
