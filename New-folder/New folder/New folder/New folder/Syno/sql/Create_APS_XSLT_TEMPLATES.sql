set define off

DROP TABLE APS_XSLT_TEMPLATES CASCADE CONSTRAINTS;
CREATE TABLE APS_XSLT_TEMPLATES 
    ( 
    "TID"      NUMBER NOT NULL,
    "CLIENTID" NUMBER NOT NULL,
    "STATUS"   VARCHAR2(20 BYTE),
    "TEMPLATE" CLOB,
    "NOTES"    VARCHAR2(4000 BYTE),
    "SEQUENCE" NUMBER,
    "DESCRIPTION"    VARCHAR2(2000 BYTE),
    "SAMPLE" BLOB,
    "NAME" VARCHAR2(200 BYTE),
    "PREVIEW_TEMPLATE" CLOB,                         
    "CREATED_TIMESTAMP" TIMESTAMP (4) WITH TIME ZONE,
    "CREATED_USERID" NUMBER,
    "UPDATED_TIMESTAMP" TIMESTAMP (4) WITH TIME ZONE,
    "UPDATED_USERID" NUMBER
    )
    LOB (TEMPLATE) STORE AS SECUREFILE (TABLESPACE "SNX_IWS_LOB" COMPRESS DEDUPLICATE)
    LOB (SAMPLE) STORE AS SECUREFILE (TABLESPACE "SNX_IWS_LOB" COMPRESS DEDUPLICATE)
    LOB (PREVIEW_TEMPLATE) STORE AS SECUREFILE (TABLESPACE "SNX_IWS_LOB" COMPRESS DEDUPLICATE)
;
ALTER TABLE APS_XSLT_TEMPLATES 
    ADD CONSTRAINT APS_XSLT_TEMPLATES_PK PRIMARY KEY ( TID ) using index tablespace snx_iws_inx;
ALTER TABLE APS_XSLT_TEMPLATES
    ADD CONSTRAINT APS_XSLT_TEMPLATES_UK1 UNIQUE (CLIENTID, NAME) ENABLE;
CREATE INDEX APS_XSLT_TEMPLATES_NK1 ON APS_XSLT_TEMPLATES 
    (CLIENTID, NAME, STATUS) tablespace snx_iws_inx;

DROP SEQUENCE APS_XSLT_TEMPLATES_SEQ;
--Create Sequence
CREATE SEQUENCE APS_XSLT_TEMPLATES_SEQ MINVALUE 1 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;

--Create Trigger
CREATE OR REPLACE TRIGGER APS_XSLT_TEMPLATES_TID_TGR before INSERT ON APS_XSLT_TEMPLATES FOR EACH row
  BEGIN
    IF inserting THEN
      select current_timestamp into :new.CREATED_TIMESTAMP from dual;
      IF :NEW.TID IS NULL THEN
        SELECT APS_XSLT_TEMPLATES_SEQ.nextval INTO :NEW.TID FROM dual;
      END IF;
    END IF;
  END;
/

