set define off

create or replace
PACKAGE IWS_JHC_UTILS
AS
type TEST_TAB
IS
  TABLE OF CASE_META%ROWTYPE;
  
TYPE ARRAY_TABLE
IS
  TABLE OF VARCHAR2 (50);

FUNCTION GET_META_COLUMN_NAME(
    P_CLIENTID IN CLIENTS.CLIENTID%TYPE :=0)
  RETURN VARCHAR2;

FUNCTION GET_META_COLUMN_JSON(
    P_CLIENTID IN CLIENTS.CLIENTID%TYPE :=0)
  RETURN VARCHAR2;

FUNCTION GET_META(
    V_CHVCODETYPE IN VARCHAR2)
  RETURN STACK_CODES_T PIPELINED;



/*
* If processing is successful, statusCode=0. Other numbers will be error status. 
* stackCaseID will return the case ID of the stack if exists.
*/
PROCEDURE EditStack(
    caseIDs  IN VARCHAR2,
    APSOrder IN VARCHAR2,
    STACKCASEID OUT NUMBER,
    STATUSCODE OUT NUMBER ,
    statusMessage OUT VARCHAR2, 
    USERID IN NUMBER);
/*
*Get next case 
*/
 PROCEDURE GET_NEXT_JHC_CASE 
            (  P_USERID  IN NUMBER,
               P_ROLE    IN VARCHAR2,
               P_CLIENTID IN VARCHAR2,
               P_CASEID  OUT NUMBER,
               P_RESULT  OUT VARCHAR2,
			   P_EXECMODE IN VARCHAR2 Default 'RUN');

/*
* If processing is successful, statusCode=0. Other numbers will be error status. 
*/
PROCEDURE updatePageNumberingForStack (
   stackCaseID  IN VARCHAR2,
   STATUSCODE OUT NUMBER,
   STATUSMESSAGE OUT VARCHAR2,
   USERID IN  NUMBER);

function GETSPLIT
(
    p_list varchar2,
    P_DEL VARCHAR2 := ','
) RETURN SPLIT_TBL PIPELINED;

PROCEDURE DELETECASESFROMSTACK (CASEIDS IN VARCHAR2,STATUSCODE OUT NUMBER,STATUSMESSAGE OUT VARCHAR2,USERID IN NUMBER);

FUNCTION ST_CLIENTFILENAME(P_FILENAME IN VARCHAR2)
RETURN VARCHAR2;

--FUNCTION ST_CLIENTFILENAME1(P_FILENAME IN VARCHAR2, P_CASEID IN NUMBER)
--RETURN VARCHAR2;

FUNCTION FINDOUTDATE(P_DATE IN VARCHAR2,P_VALUE IN VARCHAR2)
RETURN VARCHAR2;
PROCEDURE AUTOSTACK;
PROCEDURE CANCELLED_STACKCASE;
END IWS_JHC_UTILS;
/