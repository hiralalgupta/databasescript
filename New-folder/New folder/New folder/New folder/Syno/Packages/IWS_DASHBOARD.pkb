create or replace
PACKAGE BODY IWS_DASHBOARD AS
PROCEDURE DAILY_PRODUCTIVITY

AS
V_COUNT NUMBER :=0;
V_COUNT_1OP NUMBER :=0;
V_PROD_VALUE NUMBER :=0;
V_USERID NUMBER:=0;
V_SEQ NUMBER:=0;
V_CURRENT_DATE DATE;
V_ST5_COUNT NUMBER;
V_SCR_COUNT NUMBER :=0;
V_DASHBOARD_ROLE_ID NUMBER;
V_DAILY_TARGET NUMBER;
V_STAGE_ROLE NUMBER :=0;

-- Date time consider 8.00 AM - 7.59 AM(next day for india)
V_IND_START TIMESTAMP := CAST(TRUNC(SYSDATE)||' 08.00.00 AM ASIA/CALCUTTA' AS TIMESTAMP WITH TIME ZONE) AT TIME ZONE 'America/New_York';
V_IND_END TIMESTAMP := CAST(TRUNC(SYSDATE+1)||' 07.59.00 AM ASIA/CALCUTTA' AS TIMESTAMP WITH TIME ZONE) AT TIME ZONE 'America/New_York';
-- Date time consider 8.00 AM - 7.30 AM(next day for india)
V_IND_CURRENT_START TIMESTAMP := current_timestamp ;
V_IND_CURRENT_END TIMESTAMP := CAST(TRUNC(SYSDATE+1)||' 07.30.00 AM ASIA/CALCUTTA' AS TIMESTAMP WITH TIME ZONE) AT TIME ZONE 'America/New_York';
BEGIN

 
    
  ---COMPLETED CASEID FOR CURRENT DATE
 FOR REC IN ( SELECT  CASEID, STAGEID, USERID, FILE_SEGMENT,ISCOMPLETED,TOTALPAGES FROM  
            (
            --COMPLETED CASE
            SELECT S.CASEID,     S.STAGEID,    A.USERID,    A.FILE_SEGMENT,    A.ISCOMPLETED,SEG.TOTALPAGES  FROM PARALLELCASESTATUS A,    CASEHISTORYSUM S,
              STAGES ST,(SELECT COUNT(ORIGINALPAGENUMBER) TOTALPAGES,CASEID,FILE_SEGMENT,STAGEID FROM SEGMENTS_FOR_PAGES_V WHERE STAGEID=4  
             GROUP BY CASEID,FILE_SEGMENT,STAGEID) SEG,AUDITLOG AU  WHERE S.CASEID  =A.CASEID   AND A.USERID IS NOT NULL   AND AU.CASEID=S.CASEID 
           -- AND TRUNC(TIMESTAMP)=TRUNC(SYSDATE)
            AND (TIMESTAMP BETWEEN V_IND_START AND V_IND_END)
          
            AND AU.STAGEID=S.STAGEID AND AU.USERID=A.USERID
            AND TRUNC(S.STAGECOMPLETIONTIMESTAMP) IS NOT NULL
            AND SEG.CASEID=S.CASEID AND S.STAGEID=SEG.STAGEID AND A.FILE_SEGMENT=SEG.FILE_SEGMENT
            AND S.STAGEID= 4
            AND S.STAGEID                   =A.STAGEID
            AND S.STAGESTARTTIMESTAMP      IS NOT NULL
            AND S.STAGEID                   = ST.STAGEID
            UNION 
            --Current loading case
            SELECT  V.CASEID,V.STAGEID,V.USERID,V.FILE_SEGMENT,V.ISCOMPLETED,P.TOTALPAGES FROM GET_CASE_STAGE_STATUS_V V,
            AUDITLOG AU,(SELECT COUNT(1) TOTALPAGES,CASEID,FILE_SEGMENT,STAGEID FROM SEGMENTS_FOR_PAGES_V WHERE STAGEID=4 
            --AND  TRUNC(COMPLETETIMESTAMP)=TRUNC(SYSDATE)
             AND (COMPLETETIMESTAMP BETWEEN V_IND_START AND V_IND_END)
            AND ISCOMPLETED='Y' AND ISDELETED='N' GROUP BY CASEID,FILE_SEGMENT,STAGEID) P
            WHERE --TRUNC(AU.TIMESTAMP)=TRUNC(SYSDATE) 
            (AU.TIMESTAMP BETWEEN V_IND_START AND V_IND_END)
            AND AU.ACTIONID=85  AND P.CASEID=V.CASEID AND V.STAGEID=P.STAGEID AND V.FILE_SEGMENT=P.FILE_SEGMENT
            AND V.CASEID=AU.CASEID AND V.STAGEID=AU.STAGEID AND V.USERID=AU.USERID AND V.STAGEID=4
            AND NOT EXISTS(SELECT 1 FROM AUDITLOG A WHERE A.CASEID=AU.CASEID AND A.STAGEID=AU.STAGEID AND A.USERID=AU.USERID AND A.ACTIONID=87)
            --compare date timestamp for last current sorting not completed case
            --AND TO_TIMESTAMP(TO_CHAR(sysdate,'DD-MON-YY HH24:MI:SS'),'DD-MON-YY HH24:MI:SS') < TO_TIMESTAMP((TO_CHAR(SYSDATE,'DD-MON-YY ')||'23:44:00'),'DD-MON-YY HH24:MI:SS')
            AND V_IND_CURRENT_START < V_IND_CURRENT_END
            ) ORDER BY USERID) LOOP
  
  ---REASSIGNED CASEID FOR CURRENT DATE
           SELECT COUNT(1) INTO V_COUNT FROM 
          (SELECT CHS.CASEID,A.USERID,CHS.STAGEID,A.FILE_SEGMENT,MAX(STAGECOMPLETIONTIMESTAMP) STAGE4_DATE,MAX(AU.TIMESTAMP) TIMESTAMP FROM
          CASEHISTORYSUM CHS,PARALLELCASESTATUS A,AUDITLOG AU 
          WHERE CHS.STAGEID=4 AND CHS.STAGESTARTTIMESTAMP  IS NOT NULL AND AU.ACTIONID=87 AND AU.STAGEID=A.STAGEID
          AND AU.CASEID=A.CASEID AND AU.USERID=A.USERID 
          AND CHS.STAGECOMPLETIONTIMESTAMP IS NOT NULL
          AND A.USERID IS NOT NULL
          AND CHS.STAGEID                   =A.STAGEID
          AND CHS.CASEID  =A.CASEID 
          GROUP BY CHS.CASEID,A.USERID,CHS.STAGEID,A.FILE_SEGMENT HAVING COUNT(CHS.STAGECOMPLETIONTIMESTAMP)>=2)
          WHERE --TRUNC(TIMESTAMP)=TRUNC(SYSDATE) 
          --AND TRUNC(STAGE4_DATE) = TRUNC(STAGE4_DATE) 
          (TIMESTAMP BETWEEN V_IND_START AND V_IND_END)
          AND (STAGE4_DATE BETWEEN V_IND_START AND V_IND_END)
          AND  REC.STAGEID=STAGEID AND REC.CASEID=CASEID AND REC.USERID=USERID
          AND REC.FILE_SEGMENT=FILE_SEGMENT;
  
  IF V_COUNT = 0 THEN
  
         
          
        --  SELECT COUNT(1) INTO REC.TOTALPAGES FROM SEGMENTS_FOR_PAGES_V V WHERE V.CASEID=REC.CASEID AND V.STAGEID=REC.STAGEID AND V.FILE_SEGMENT=REC.FILE_SEGMENT;
          
            IF V_USERID != REC.USERID THEN
             V_USERID := REC.USERID;
             V_PROD_VALUE := REC.TOTALPAGES;
             V_SEQ := TEST_DAILY_PRODUCTIVITY_SEQ.NEXTVAL;
             
             SELECT DASHBOARD_ROLE_ID,CASE WHEN (EFFECT_DATE+NVL(NEW_HIRE_DURATION,0)-1) >= SYSDATE
             THEN NEW_HIRE_TARGET ELSE DAILY_TARGET END  INTO V_DASHBOARD_ROLE_ID,V_DAILY_TARGET FROM USER_DEFAULT_ROLE DR,ROLE_TARGETS RT
             WHERE EFFECT_DATE=(SELECT MAX(EFFECT_DATE) FROM USER_DEFAULT_ROLE UDR WHERE UDR.USER_ID=DR.USER_ID)
             AND USER_ID=REC.USERID AND DR.DASHBOARD_ROLE_ID=RT.ROLE_ID;
             
            ELSIF V_USERID = REC.USERID THEN
              V_PROD_VALUE := V_PROD_VALUE + REC.TOTALPAGES;
            END IF;
        
        SELECT COUNT(1) INTO V_STAGE_ROLE FROM DASHBOARD_ROLE_MAPPING WHERE DASHBOARD_ROLE_ID=V_DASHBOARD_ROLE_ID AND STAGEID=REC.STAGEID;
        
        IF V_STAGE_ROLE<>0 THEN
            DELETE FROM DAILY_PRODUCTIVITY WHERE USER_ID =REC.USERID AND ROLE_ID=V_DASHBOARD_ROLE_ID --AND TRUNC(DAY)=TRUNC(SYSDATE);
            AND (TO_TIMESTAMP(DAY)  AT TIME ZONE 'America/New_York' BETWEEN V_IND_START AND V_IND_END);
            INSERT INTO DAILY_PRODUCTIVITY (PRODUCTIVITYID,ROLE_ID,PRODUCTIVITY_VALUE,DAILY_TARGET,USER_ID,DAY)
            VALUES(V_SEQ,V_DASHBOARD_ROLE_ID,V_PROD_VALUE,V_DAILY_TARGET,V_USERID,SYSDATE);
        END IF;
            V_USERID := REC.USERID;
            
     
   
   ELSE
   -- REASSIGN CASE
   --Correction for Notes
  -- UPDATE TEST_DAILY_PRODUCTIVITY SET DAILY_TARGET=DAILY_TARGET-REC.TOTALPAGES WHERE ROLE_ID=1 AND USER_ID=REC.USERID
  -- AND TRUNC(DAY)=(SELECT TRUNC(TIMESTAMP) FROM AUDITLOG A WHERE A.CASEID=REC.CASEID AND A.STAGEID=REC.STAGEID AND A.USERID=REC.USERID AND A.ACTIONID=87);
   NULL;
   
   
   
  END IF;
  
  
  
  
  END LOOP;
  
  COMMIT;
  ---For Start QA-------------------------------------------------------------------
  SELECT 
    COUNT(S.CASEID) INTO V_COUNT
    
  FROM CASEHISTORYSUM A,
    CASEHISTORYSUM S,
    STAGES ST
  WHERE A.ASSIGNMENTSTARTTIMESTAMP    IS NOT NULL
  AND A.ASSIGNMENTCOMPLETIONTIMESTAMP IS NOT NULL
  AND S.CASEID                         =A.CASEID
  AND S.STAGEID                        =A.STAGEID
  AND S.STAGESTARTTIMESTAMP           IS NOT NULL
 -- AND trunc(S.stagecompletiontimestamp)      =trunc(sysdate)
AND (IWS_DW_UTILS.CONVERT_EST_TO_IST_TIME(S.STAGECOMPLETIONTIMESTAMP) BETWEEN V_IND_START AND V_IND_END)
  AND S.STAGEID                        = ST.STAGEID
  AND ST.PARALLELISM                  != 9999;
  
  IF V_COUNT <>0 THEN

FOR REC IN (SELECT A.CASEID,A.USERID,A.STAGEID,C.TOTALPAGES FROM AUDITLOG A,CASES C WHERE
        A.CASEID=C.CASEID --AND TRUNC(A.TIMESTAMP)=TRUNC(SYSDATE) 
        AND (A.TIMESTAMP BETWEEN V_IND_START AND V_IND_END)
        AND A.STAGEID=5 AND A.ACTIONID=87) 
        LOOP
  
  
 
        SELECT COUNT(1) INTO V_ST5_COUNT FROM 
                (SELECT CASEID,STAGEID,USERID,MAX(TIMESTAMP) AS TIMESTAMP FROM AUDITLOG WHERE ACTIONID=87 AND STAGEID=5  GROUP BY CASEID,
                STAGEID,USERID HAVING COUNT(TIMESTAMP)>=2) AU WHERE --TRUNC(TIMESTAMP)=TRUNC(SYSDATE) 
                 (TIMESTAMP BETWEEN V_IND_START AND V_IND_END)
                AND REC.CASEID=CASEID AND REC.STAGEID=STAGEID AND REC.USERID=USERID;
  
  ---FOR FRESH CASE 
  IF  V_ST5_COUNT=0 THEN
  
            IF V_USERID != REC.USERID THEN
             V_USERID := REC.USERID;
             V_PROD_VALUE := REC.TOTALPAGES;
             V_SEQ := TEST_DAILY_PRODUCTIVITY_SEQ.NEXTVAL;
             
              SELECT DASHBOARD_ROLE_ID,CASE WHEN (EFFECT_DATE+NVL(NEW_HIRE_DURATION,0)-1) >= SYSDATE 
              THEN NEW_HIRE_TARGET ELSE DAILY_TARGET END  INTO V_DASHBOARD_ROLE_ID,V_DAILY_TARGET FROM USER_DEFAULT_ROLE DR,ROLE_TARGETS RT
             WHERE EFFECT_DATE=(SELECT MAX(EFFECT_DATE) FROM USER_DEFAULT_ROLE UDR WHERE UDR.USER_ID=DR.USER_ID)
             AND USER_ID=REC.USERID AND DR.DASHBOARD_ROLE_ID=RT.ROLE_ID;
             
            ELSIF V_USERID = REC.USERID THEN
              V_PROD_VALUE := V_PROD_VALUE + REC.TOTALPAGES;
            END IF;
            
            SELECT COUNT(1) INTO V_STAGE_ROLE FROM DASHBOARD_ROLE_MAPPING WHERE DASHBOARD_ROLE_ID=V_DASHBOARD_ROLE_ID AND STAGEID=REC.STAGEID;
        
          IF V_STAGE_ROLE<>0 THEN
             DELETE FROM DAILY_PRODUCTIVITY WHERE USER_ID =REC.USERID AND ROLE_ID=V_DASHBOARD_ROLE_ID --AND TRUNC(DAY)=TRUNC(SYSDATE);
            AND (TO_TIMESTAMP(DAY)  AT TIME ZONE 'America/New_York' BETWEEN V_IND_START AND V_IND_END);
             
            INSERT INTO DAILY_PRODUCTIVITY (PRODUCTIVITYID,ROLE_ID,PRODUCTIVITY_VALUE,DAILY_TARGET,USER_ID,DAY)
            VALUES(V_SEQ,V_DASHBOARD_ROLE_ID,V_PROD_VALUE,V_DAILY_TARGET,V_USERID,SYSDATE);
            V_USERID := REC.USERID;
            END IF;
  ELSE
   NULL;
  END IF;
  
  NULL;
  END LOOP;
  END IF;
  ---For End QA-------------------------------------------------------------------
    
  -----For -2OP---------------------------------------------------------------------
  FOR REC IN (SELECT * FROM (SELECT AU.STAGEID,P.CASEID,AU.USERID,COUNT(D.DPENTRYID) AS TOTALPAGES FROM AUDITLOG AU,DPENTRIES D,PAGES P  WHERE 
             -- TRUNC(AU.TIMESTAMP)=TRUNC(SYSDATE) 
              (AU.TIMESTAMP BETWEEN V_IND_START AND V_IND_END)
              AND AU.STAGEID=6 AND AU.ACTIONID=87 AND D.PAGEID=P.PAGEID AND P.CASEID=AU.CASEID AND P.ISDELETED ='N' AND D.ISDELETED ='N' GROUP BY AU.STAGEID,P.CASEID,AU.USERID
              UNION 
              SELECT  V.STAGEID,V.CASEID,V.USERID,P.TOTALPAGES FROM GET_CASE_STAGE_STATUS_V V,AUDITLOG AU,
              (SELECT COUNT(DPENTRYID) AS TOTALPAGES,P.CASEID  FROM DPENTRIES D,PAGES P WHERE  P.ISDELETED ='N' AND D.ISDELETED ='N' AND P.PAGEID=D.PAGEID
              --AND TRUNC(D.CREATED_TIMESTAMP)=TRUNC(SYSDATE)
              AND (D.CREATED_TIMESTAMP BETWEEN V_IND_START AND V_IND_END)
              GROUP BY P.CASEID) P 
            WHERE --TRUNC(AU.TIMESTAMP)=TRUNC(SYSDATE) 
            (AU.TIMESTAMP BETWEEN V_IND_START AND V_IND_END)
            AND AU.ACTIONID=85  AND P.CASEID=V.CASEID  AND V.CASEID=AU.CASEID AND V.STAGEID=AU.STAGEID AND V.USERID=AU.USERID AND V.STAGEID=6
            AND NOT EXISTS(SELECT 1 FROM AUDITLOG A WHERE A.CASEID=AU.CASEID AND A.STAGEID=AU.STAGEID AND A.USERID=AU.USERID AND A.ACTIONID=87)
            --compare date timestamp for last current dp working not completed case
            AND V_IND_CURRENT_START < V_IND_CURRENT_END
            )
            ORDER BY USERID
              ) LOOP
      
      ---REASSIGN CASE
      SELECT COUNT(1) INTO V_COUNT FROM 
          (SELECT CASEID,STAGEID,USERID,MAX(TIMESTAMP) AS TIMESTAMP FROM AUDITLOG WHERE ACTIONID=87 AND STAGEID=6  GROUP BY CASEID,
          STAGEID,USERID HAVING COUNT(TIMESTAMP)>=2) AU WHERE --TRUNC(TIMESTAMP)=TRUNC(SYSDATE) 
           (TIMESTAMP BETWEEN V_IND_START AND V_IND_END)
          AND REC.CASEID=CASEID AND REC.STAGEID=STAGEID AND REC.USERID=USERID;
          
     
        IF V_COUNT=0 THEN
        
          IF V_USERID != REC.USERID THEN
             V_USERID := REC.USERID;
             V_PROD_VALUE := REC.TOTALPAGES;
             V_SEQ := TEST_DAILY_PRODUCTIVITY_SEQ.NEXTVAL;
                 
              SELECT DASHBOARD_ROLE_ID,CASE WHEN (EFFECT_DATE+NVL(NEW_HIRE_DURATION,0)-1) >= SYSDATE 
              THEN NEW_HIRE_TARGET ELSE DAILY_TARGET END  INTO V_DASHBOARD_ROLE_ID,V_DAILY_TARGET FROM USER_DEFAULT_ROLE DR,ROLE_TARGETS RT
             WHERE EFFECT_DATE=(SELECT MAX(EFFECT_DATE) FROM USER_DEFAULT_ROLE UDR WHERE UDR.USER_ID=DR.USER_ID)
             AND USER_ID=REC.USERID AND DR.DASHBOARD_ROLE_ID=RT.ROLE_ID;
               
            
            ELSIF V_USERID = REC.USERID THEN
              V_PROD_VALUE := V_PROD_VALUE + REC.TOTALPAGES;
            END IF;
            
            SELECT COUNT(1) INTO V_STAGE_ROLE FROM DASHBOARD_ROLE_MAPPING WHERE DASHBOARD_ROLE_ID=V_DASHBOARD_ROLE_ID AND STAGEID=REC.STAGEID;
        SELECT COUNT(1) INTO V_SCR_COUNT FROM CASES C,CLIENTS CL WHERE C.CLIENTID=C.CLIENTID AND CL.FILE_TYPE='SCREENING' AND C.CASEID=REC.CASEID;
              IF V_SCR_COUNT=0 THEN
                      --REGULAR INDEXER
                     
        
                      IF V_STAGE_ROLE<>0 THEN
                        DELETE FROM DAILY_PRODUCTIVITY WHERE USER_ID =REC.USERID AND ROLE_ID=V_DASHBOARD_ROLE_ID-- AND TRUNC(DAY)=TRUNC(SYSDATE);
                         AND (TO_TIMESTAMP(DAY)  AT TIME ZONE 'America/New_York' BETWEEN V_IND_START AND V_IND_END);
                        INSERT INTO DAILY_PRODUCTIVITY (PRODUCTIVITYID,ROLE_ID,PRODUCTIVITY_VALUE,DAILY_TARGET,USER_ID,DAY)
                        VALUES(V_SEQ,V_DASHBOARD_ROLE_ID,V_PROD_VALUE,V_DAILY_TARGET,V_USERID,SYSDATE);
                        END IF;
              ELSE
                      ---TRIAGE INDEXER
                       IF V_STAGE_ROLE<>0 THEN
                       DELETE FROM DAILY_PRODUCTIVITY WHERE USER_ID =REC.USERID AND ROLE_ID=V_DASHBOARD_ROLE_ID --AND TRUNC(DAY)=TRUNC(SYSDATE);
                        AND (TO_TIMESTAMP(DAY)  AT TIME ZONE 'America/New_York' BETWEEN V_IND_START AND V_IND_END);
                      INSERT INTO DAILY_PRODUCTIVITY (PRODUCTIVITYID,ROLE_ID,PRODUCTIVITY_VALUE,DAILY_TARGET,USER_ID,DAY)
                        VALUES(V_SEQ,V_DASHBOARD_ROLE_ID,V_PROD_VALUE,V_DAILY_TARGET,V_USERID,SYSDATE);
                       END IF;
              END IF;
            V_USERID := REC.USERID;
        ELSE
         NULL;
        END IF;
  END LOOP;
  ---For End 2OP-------------------------------------------------------------------
  
  
  
  -----For Start 2QC----------------------------------------------------------------------
  FOR REC IN (SELECT DISTINCT STAGEID,CASEID,USERID, TOTALPAGES  FROM           
   (SELECT AU.STAGEID,P.CASEID,AU.USERID,COUNT(D.DPENTRYID) AS TOTALPAGES FROM AUDITLOG AU,DPENTRIES D,PAGES P  WHERE --TRUNC(AU.TIMESTAMP)=TRUNC(SYSDATE)
    (AU.TIMESTAMP BETWEEN V_IND_START AND V_IND_END)
   AND AU.STAGEID=7 AND AU.ACTIONID=87 AND D.PAGEID=P.PAGEID AND P.CASEID=AU.CASEID AND P.ISDELETED ='N' AND D.ISDELETED ='N' GROUP BY AU.STAGEID,P.CASEID,AU.USERID,AU.TIMESTAMP)) LOOP
  
  
   ---REASSIGN CASE
      SELECT COUNT(1) INTO V_COUNT FROM 
          (SELECT CASEID,STAGEID,USERID,MAX(TIMESTAMP) AS TIMESTAMP FROM AUDITLOG WHERE ACTIONID=87 AND STAGEID=7  GROUP BY CASEID,
          STAGEID,USERID HAVING COUNT(TIMESTAMP)>=2) AU WHERE --TRUNC(TIMESTAMP)=TRUNC(SYSDATE) 
          (TIMESTAMP BETWEEN V_IND_START AND V_IND_END)
          AND REC.CASEID=CASEID AND REC.STAGEID=STAGEID  AND REC.STAGEID=STAGEID AND REC.USERID=USERID;
       
       
       IF V_COUNT=0 THEN
        
          IF V_USERID != REC.USERID THEN
             V_USERID := REC.USERID;
             V_PROD_VALUE := REC.TOTALPAGES;
             V_SEQ := TEST_DAILY_PRODUCTIVITY_SEQ.NEXTVAL;
                 
              SELECT DASHBOARD_ROLE_ID,CASE WHEN (EFFECT_DATE+NVL(NEW_HIRE_DURATION,0)-1) >= SYSDATE 
              THEN NEW_HIRE_TARGET ELSE DAILY_TARGET END  INTO V_DASHBOARD_ROLE_ID,V_DAILY_TARGET FROM USER_DEFAULT_ROLE DR,ROLE_TARGETS RT
             WHERE EFFECT_DATE=(SELECT MAX(EFFECT_DATE) FROM USER_DEFAULT_ROLE UDR WHERE UDR.USER_ID=DR.USER_ID)
             AND USER_ID=REC.USERID AND DR.DASHBOARD_ROLE_ID=RT.ROLE_ID;
               
            
            ELSIF V_USERID = REC.USERID THEN
              V_PROD_VALUE := V_PROD_VALUE + REC.TOTALPAGES;
            END IF;
             SELECT COUNT(1) INTO V_STAGE_ROLE FROM DASHBOARD_ROLE_MAPPING WHERE DASHBOARD_ROLE_ID=V_DASHBOARD_ROLE_ID AND STAGEID=REC.STAGEID;
              IF V_STAGE_ROLE<>0 THEN
            DELETE FROM DAILY_PRODUCTIVITY WHERE USER_ID =REC.USERID AND ROLE_ID=V_DASHBOARD_ROLE_ID --AND TRUNC(DAY)=TRUNC(SYSDATE); 
            AND (TO_TIMESTAMP(DAY)  AT TIME ZONE 'America/New_York' BETWEEN V_IND_START AND V_IND_END);
       
      
              
                        INSERT INTO DAILY_PRODUCTIVITY (PRODUCTIVITYID,ROLE_ID,PRODUCTIVITY_VALUE,DAILY_TARGET,USER_ID,DAY)
                        VALUES(V_SEQ,V_DASHBOARD_ROLE_ID,V_PROD_VALUE,V_DAILY_TARGET,V_USERID,SYSDATE);
              END IF;
              
            V_USERID := REC.USERID;
        ELSE
         NULL;
        END IF;   
  END LOOP;
  
 
  
  COMMIT;
  -----For End 2QC------------------------------------------------------------------------ 

END DAILY_PRODUCTIVITY;




END IWS_DASHBOARD;