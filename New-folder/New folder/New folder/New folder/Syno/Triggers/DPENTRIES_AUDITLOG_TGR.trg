create or replace
TRIGGER DPENTRIES_AUDITLOG_TGR FOR INSERT OR UPDATE ON DPENTRIES COMPOUND TRIGGER 
  DP_ID NUMBER;
  V_STR_OBJECT_T VARCHAR2(500);
  V_ARRAY_NEW SPLIT_TBL;
  V_ARRAY_OLD SPLIT_TBL;
  V_COUNT_NEW NUMBER := 0;
  V_COUNT_OLD NUMBER := 0;
  V_CASEID CASES.CASEID%TYPE;
  V_STAGEID CASES.STAGEID%TYPE;
  V_USERID CASES.USERID%TYPE;
  V_SESSIONID SESSIONS.SESSIONID%TYPE;
  V_CHID        NUMBER;
  STATUSMESSAGE VARCHAR2(200);
AFTER EACH row
IS
BEGIN
  BEGIN
    IF INSERTING THEN
      DP_ID  := :NEW.DPENTRYID;
      V_CHID := :NEW.CHID;
    END IF;
  END;
  BEGIN
    IF UPDATING THEN
      DP_ID       := :OLD.DPENTRYID;
      V_ARRAY_OLD := SPLIT_TBL(:OLD.DPENTRYID,:OLD.PAGEID,:OLD.DPFORMENTITYID,:OLD.ENTRYTRANSCRIPTION,:OLD.DATADATE,:OLD.STATUS,:OLD.CREATED_USERID,:OLD.CREATED_STAGEID,:OLD.ISCOMPLETED,
      :OLD.ISDELETED,:OLD.REQUIRECODE,:OLD.SUSPENDNOTE,:OLD.ISREJECTED,:OLD.REJECTREASON,:OLD.HID,:OLD.DATAFIELD1VALUE,:OLD.DATAFIELD2VALUE,:OLD.DATAFIELD3VALUE,:OLD.DATAFIELD4VALUE,
      :OLD.ISCRITICAL,:OLD.ISTEXT,:OLD.ISHANDWRITING,:OLD.STARTSECTIONNUMBER,:OLD.ENDSECTIONNUMBER,:OLD.DATAFIELD5VALUE,:OLD.DATAFIELD6VALUE,:OLD.DATAFIELD7VALUE,:OLD.DATAFIELD8VALUE,
      :OLD.HID_PREVIOUS,:OLD.SEQUENCE,:OLD.DATAFIELD9VALUE,:OLD.DATAFIELD10VALUE,:OLD.DATAFIELD11VALUE,:OLD.DATAFIELD12VALUE,:OLD.CRITICALITY,:OLD.ICD10CMCODE,:OLD.ICD9CODE,:OLD.CPTCODE,
      :OLD.ICD10PCSCODE,:OLD.MIBDATECODE,:OLD.MIBCODE,:OLD.MESHCODE,:OLD.DATAFIELD13VALUE,:OLD.DATAFIELD14VALUE,:OLD.DATAFIELD15VALUE,:OLD.DATAFIELD16VALUE,:OLD.DATAFIELD17VALUE,:OLD.DATAFIELD18VALUE,
      :OLD.DATAFIELD19VALUE,:OLD.DATAFIELD20VALUE,:OLD.MIBSEVERITYCODE,:OLD.OMIM_ID,:OLD.RGACODE,:OLD.DEBIT_VALUE,:OLD.CREDIT_VALUE,:OLD.ISFINAL,:OLD.DATAFIELD21VALUE,:OLD.DATAFIELD22VALUE,:OLD.DATAFIELD23VALUE,
      :OLD.DATAFIELD24VALUE,:OLD.DATAFIELD25VALUE,:OLD.DATAFIELD26VALUE,:OLD.DATAFIELD27VALUE,:OLD.DATAFIELD28VALUE,:OLD.DATAFIELD29VALUE,:OLD.DATAFIELD30VALUE,:OLD.DATAFIELD31VALUE,:OLD.DATAFIELD32VALUE,
      :OLD.RXCUI,:OLD.LINK_TO_SEQUENCE,:OLD.APPLICABLE_PARTIES,:OLD.APPLICABLE_CASEIDS,:OLD.CHID, :OLD.SNOMED_CTCODE);
      V_ARRAY_NEW := SPLIT_TBL(:NEW.DPENTRYID,:NEW.PAGEID,:NEW.DPFORMENTITYID,:NEW.ENTRYTRANSCRIPTION,:NEW.DATADATE,:NEW.STATUS,:NEW.CREATED_USERID,:NEW.CREATED_STAGEID,:NEW.ISCOMPLETED,
      :NEW.ISDELETED,:NEW.REQUIRECODE,:NEW.SUSPENDNOTE,:NEW.ISREJECTED,:NEW.REJECTREASON,:NEW.HID,:NEW.DATAFIELD1VALUE,:NEW.DATAFIELD2VALUE,:NEW.DATAFIELD3VALUE,:NEW.DATAFIELD4VALUE,
      :NEW.ISCRITICAL,:NEW.ISTEXT,:NEW.ISHANDWRITING,:NEW.STARTSECTIONNUMBER,:NEW.ENDSECTIONNUMBER,:NEW.DATAFIELD5VALUE,:NEW.DATAFIELD6VALUE,:NEW.DATAFIELD7VALUE,:NEW.DATAFIELD8VALUE,
      :NEW.HID_PREVIOUS,:NEW.SEQUENCE,:NEW.DATAFIELD9VALUE,:NEW.DATAFIELD10VALUE,:NEW.DATAFIELD11VALUE,:NEW.DATAFIELD12VALUE,:NEW.CRITICALITY,:NEW.ICD10CMCODE,:NEW.ICD9CODE,:NEW.CPTCODE,
      :NEW.ICD10PCSCODE,:NEW.MIBDATECODE,:NEW.MIBCODE,:NEW.MESHCODE,:NEW.DATAFIELD13VALUE,:NEW.DATAFIELD14VALUE,:NEW.DATAFIELD15VALUE,:NEW.DATAFIELD16VALUE,:NEW.DATAFIELD17VALUE,:NEW.DATAFIELD18VALUE,
      :NEW.DATAFIELD19VALUE,:NEW.DATAFIELD20VALUE,:NEW.MIBSEVERITYCODE,:NEW.OMIM_ID,:NEW.RGACODE,:NEW.DEBIT_VALUE,:NEW.CREDIT_VALUE,:NEW.ISFINAL,:NEW.DATAFIELD21VALUE,:NEW.DATAFIELD22VALUE,:NEW.DATAFIELD23VALUE,
      :NEW.DATAFIELD24VALUE,:NEW.DATAFIELD25VALUE,:NEW.DATAFIELD26VALUE,:NEW.DATAFIELD27VALUE,:NEW.DATAFIELD28VALUE,:NEW.DATAFIELD29VALUE,:NEW.DATAFIELD30VALUE,:NEW.DATAFIELD31VALUE,:NEW.DATAFIELD32VALUE,
      :NEW.RXCUI,:NEW.LINK_TO_SEQUENCE,:NEW.APPLICABLE_PARTIES,:NEW.APPLICABLE_CASEIDS,:NEW.CHID, :NEW.SNOMED_CTCODE);

      --get case id first, in case CHID is null
      select p.caseid into V_CASEID from pages p where pageid=:NEW.PAGEID;
      
      IF :NEW.CHID IS NULL THEN
        null;
      ELSIF :NEW.CHID != :OLD.CHID OR :OLD.CHID IS NULL THEN
        SELECT STAGEID,
          USERID
        INTO V_STAGEID,
          V_USERID
        FROM CASEHISTORYSUM
        WHERE CHID= :NEW.CHID;
        SELECT MAX(SESSIONID)
        INTO V_SESSIONID
        FROM SESSIONS
        WHERE USERID=V_USERID;
      ELSE
        SELECT STAGEID,
          USERID
        INTO V_STAGEID,
          V_USERID
        FROM CASEHISTORYSUM
        WHERE CHID=:OLD.CHID;
        SELECT MAX(SESSIONID)
        INTO V_SESSIONID
        FROM SESSIONS
        WHERE USERID=V_USERID;
      END IF;
      
      FOR REC    IN
      (SELECT COLUMN_NAME
      FROM USER_TAB_COLS
      WHERE TABLE_NAME     = 'DPENTRIES'
      AND COLUMN_NAME NOT IN ('CREATED_TIMESTAMP','UPDATED_TIMESTAMP','UPDATED_USERID','UPDATED_STAGEID','USERFEEDBACK')
      ORDER BY COLUMN_ID ASC
      )
      LOOP
        V_COUNT_NEW                                               := V_COUNT_NEW +1;
        V_COUNT_OLD                                               := V_COUNT_OLD +1;
        IF UPDATING(REC.COLUMN_NAME) AND V_ARRAY_OLD(V_COUNT_OLD) <> V_ARRAY_NEW(V_COUNT_NEW) OR (V_ARRAY_NEW(V_COUNT_NEW) IS NULL AND V_ARRAY_OLD(V_COUNT_OLD) IS NOT NULL) OR (V_ARRAY_NEW(V_COUNT_NEW) IS NOT NULL AND V_ARRAY_OLD(V_COUNT_OLD) IS NULL) THEN
          IF V_ARRAY_OLD(V_COUNT_OLD)                              ='N' THEN
            V_ARRAY_OLD(V_COUNT_OLD)                              := 'false';
          ELSIF V_ARRAY_OLD(V_COUNT_OLD)                           ='Y' THEN
            V_ARRAY_OLD(V_COUNT_OLD)                              := 'true';
          END IF;
          IF V_ARRAY_NEW(V_COUNT_NEW)                           ='N' THEN
            V_ARRAY_NEW(V_COUNT_NEW)                              := 'false';
          ELSIF V_ARRAY_NEW(V_COUNT_NEW)                           ='Y' THEN
            V_ARRAY_NEW(V_COUNT_NEW)                              := 'true';
          END IF;
          V_STR_OBJECT_T := 'DPENTRIES.'||REC.COLUMN_NAME;
          INSERT
          INTO AUDITLOG
            (
              SESSIONID,
              USERID,
              TIMESTAMP,
              STAGEID,
              ACTIONID,
              RESULTS,
              CASEID,
              OBJECTTYPE,
              ORIGINALVALUE,
              MODIFIEDVALUE,
              ORIGINALUSERID,
              ORIGINALTIMESTAMP,
              ORIGINALSTAGEID,
              CREATED_TIMESTAMP,
              CREATED_USERID,
              CREATED_STAGEID,
              UPDATED_TIMESTAMP,
              UPDATED_USERID,
              UPDATED_STAGEID,
              USERNAME,
              OBJECTID
            )
            VALUES
            (
              V_SESSIONID,
              V_USERID,
              systimestamp,
              V_STAGEID,
              16,
              NULL,
              V_CASEID,
              V_STR_OBJECT_T,
              V_ARRAY_OLD(V_COUNT_OLD),
              V_ARRAY_NEW(V_COUNT_NEW),
              V_USERID,
              systimestamp,
              1,
              systimestamp,
              V_USERID,
              NULL,
              NULL,
              NULL,
              NULL,
              NULL,
              DP_ID
            );
        END IF;
      END LOOP;
    END IF;
  EXCEPTION
  WHEN OTHERS THEN
    STATUSMESSAGE := 'An error was encountered - '||SQLCODE||' - '||SQLERRM;
    LOG_APEX_ERROR(16,'UPDATE',STATUSMESSAGE,V_USERID);
  END;
END AFTER EACH row;
AFTER STATEMENT
IS
BEGIN
  IF INSERTING THEN
    --get case id first, in case CHID is null
    select p.caseid into V_CASEID from dpentries d, pages p where d.pageid=p.pageid and d.dpentryid=DP_ID;
    IF V_CHID IS NULL THEN
      --V_CHID :=11111;V_STAGEID:=1111;V_USERID:=1111;V_CASEID:=1111;V_SESSIONID:=1111;
      NULL;
    ELSE
      SELECT STAGEID,
        USERID
      INTO V_STAGEID,
        V_USERID
      FROM CASEHISTORYSUM
      WHERE CHID=V_CHID;
      SELECT MAX(SESSIONID) INTO V_SESSIONID FROM SESSIONS WHERE USERID=V_USERID;
    END IF;
    INSERT
    INTO AUDITLOG
      (
        SESSIONID,
        USERID,
        TIMESTAMP,
        STAGEID,
        ACTIONID,
        RESULTS,
        CASEID,
        OBJECTTYPE,
        ORIGINALVALUE,
        MODIFIEDVALUE,
        ORIGINALUSERID,
        ORIGINALTIMESTAMP,
        ORIGINALSTAGEID,
        CREATED_TIMESTAMP,
        CREATED_USERID,
        CREATED_STAGEID,
        UPDATED_TIMESTAMP,
        UPDATED_USERID,
        UPDATED_STAGEID,
        USERNAME,
        OBJECTID
      )
    SELECT V_SESSIONID,
      V_USERID,
      systimestamp,
      V_STAGEID,
      17,
      NULL,
      V_CASEID,
      SUBSTR(COLUMN_VALUE,1,INSTR(COLUMN_VALUE,'~~')-1),
      NULL,
      SUBSTR(TRIM(COLUMN_VALUE),INSTR(COLUMN_VALUE,'~~')+2,LENGTH(COLUMN_VALUE)),
      V_USERID,
      systimestamp,
      1,
      systimestamp,
      V_USERID,
      NULL,
      NULL,
      NULL,
      NULL,
      NULL,
      DP_ID
    FROM TABLE(IWS_APP_UTILS.GETSPLIT(IWS_APP_UTILS.FN_DATAFIELDVAL_AUD(DP_ID,'INSERT'),'<>'));
  END IF;
EXCEPTION
WHEN OTHERS THEN
  STATUSMESSAGE := 'An error was encountered - '||SQLCODE||' - '||SQLERRM;
  LOG_APEX_ERROR(17,'INSERT',STATUSMESSAGE,V_USERID);
END AFTER STATEMENT;
END ;
/